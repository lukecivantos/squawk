{"changed":false,"filter":false,"title":"index.php","tooltip":"/finalproject/public/index.php","value":"<?php\n    set_include_path(get_include_path() . PATH_SEPARATOR . '.. /google-api-php-client/src');\n\n    // configuration\n    require(\"../includes/config.php\"); \n    \n    // if user reached page via POST\n    if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\")\n    {\n        if (empty($_POST[\"entry_submission\"]))\n        {\n            apologize(\"Please enter a post.\");\n        }\n        if(!preg_match(\"/[a-z]/i\",$_POST[\"entry_submission\"]) && !preg_match('/\\d/', $_POST[\"entry_submission\"]))\n        {\n            apologize(\"You Need at least one letter or number.\");\n        }\n\n        \n        // update entries\n        CS50::query(\"INSERT INTO entries (user_id, entry)\n        VALUES(?, ?)\", $_SESSION[\"id\"], $_POST[\"entry_submission\"]);\n\n\n        // get entries\n        $rows = CS50::query(\"SELECT * FROM entries ORDER BY time_made DESC\");\n        if ($rows === false)\n        {\n            apologize(\"Can't find entries.\");\n        }\n        \n        // Gets votes\n        $votes = CS50::query(\"SELECT * FROM votes WHERE user_id = ?\", $_SESSION[\"id\"]);\n        if ($votes === false)\n        {\n            apologize(\"Can't find entries.\");\n        }\n        \n        \n        //store entries\n        $entries = [];\n        foreach ($rows as $row)\n        {\n            $entries[] = [\n                \"entry\" => $row[\"entry\"],\n                \"score\" => $row[\"entry_score\"],\n                \"id\" => $row[\"id\"],\n                \"time_made\" => $row[\"time_made\"],\n                \"number_comments\" => $row[\"number_comments\"]\n\n               \n            ];\n        }\n        $signs = [];\n        foreach ($votes as $vote)\n        {\n            $signs[] = [ \n                \"user_id\" => $vote[\"user_id\"],\n                \"entry_id\" => $vote[\"entry_id\"],\n                \"up_down\" => $vote[\"up_down\"]\n            ];\n        }\n    \n        // render portfolio  \"score\" => $score,\n        render(\"portfolio.php\", [\"signs\" => $signs, \"entries\" => $entries, \"title\" => \"Squawk\"]);\n    }\n    else\n    {\n        \n        // get entries\n        $rows = CS50::query(\"SELECT * FROM entries ORDER BY time_made DESC\");\n        if ($rows === false)\n        {\n            apologize(\"Can't find entries.\");\n        }\n        \n        // Get Votes\n        $votes = CS50::query(\"SELECT * FROM votes WHERE user_id = ?\", $_SESSION[\"id\"]);\n        if ($votes === false)\n        {\n            apologize(\"Can't find entries.\");\n        }\n        \n        \n        // look up entry's info\n        $entries = [];\n        foreach ($rows as $row)\n        {\n            $entries[] = [\n                \"entry\" => $row[\"entry\"],\n                \"score\" => $row[\"entry_score\"],\n                \"id\" => $row[\"id\"],\n                \"time_made\" => $row[\"time_made\"],\n                \"number_comments\" => $row[\"number_comments\"]\n               \n            ];\n        }\n        \n        // Look up vote's info\n        $signs = [];\n        foreach ($votes as $vote)\n        {\n            $signs[] = [ \n                \"user_id\" => $vote[\"user_id\"],\n                \"entry_id\" => $vote[\"entry_id\"],\n                \"up_down\" => $vote[\"up_down\"]\n            ];\n        }\n    \n    \n        // render portfolio \"score\" => $score,\n        render(\"portfolio.php\", [\"signs\" => $signs, \"entries\" => $entries, \"title\" => \"Thought Bubble\"]);\n    }\n?>","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":13,"column":64},"end":{"row":13,"column":64},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1449349672000}